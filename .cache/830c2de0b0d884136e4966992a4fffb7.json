{"id":"+l7W","dependencies":[{"name":"/home/john/workspace/Valory2/tsconfig.json","includedInParent":true,"mtime":1531152310742},{"name":"/home/john/workspace/Valory2/package.json","includedInParent":true,"mtime":1533664046105},{"name":"/home/john/workspace/Valory2/.babelrc","includedInParent":true,"mtime":1533664058125},{"name":"./config","loc":{"line":14,"column":25},"parent":"/home/john/workspace/Valory2/src/lib/cli.ts","resolved":"/home/john/workspace/Valory2/src/lib/config.ts"},{"name":"../main","loc":{"line":16,"column":23},"parent":"/home/john/workspace/Valory2/src/lib/cli.ts","resolved":"/home/john/workspace/Valory2/src/main.ts"},{"name":"../compiler/compilerheaders","loc":{"line":17,"column":34},"parent":"/home/john/workspace/Valory2/src/lib/cli.ts","resolved":"/home/john/workspace/Valory2/src/compiler/compilerheaders.ts"},{"name":"../compiler/compileRunner","loc":{"line":18,"column":32},"parent":"/home/john/workspace/Valory2/src/lib/cli.ts","resolved":"/home/john/workspace/Valory2/src/compiler/compileRunner.ts"},{"name":"../tsoa/tsoaRunner","loc":{"line":21,"column":29},"parent":"/home/john/workspace/Valory2/src/lib/cli.ts","resolved":"/home/john/workspace/Valory2/src/tsoa/tsoaRunner.ts"},{"name":"./helpers","loc":{"line":26,"column":26},"parent":"/home/john/workspace/Valory2/src/lib/cli.ts","resolved":"/home/john/workspace/Valory2/src/lib/helpers.ts"}],"generated":{"js":"var $l7W$exports={};$parcel$require(\"+l7W\",\"bluebird\"),$parcel$require(\"+l7W\",\"bluebird\");let $l7W$var$compilerRunner=(()=>{var e=$l7W$import$_coroutine(function*(e){console.log($l7W$var$chalk_1.default.bold(`valory compile v${$l7W$var$config_1.Config.ValoryVersion}\\n`)),console.log(`Project:       ${$l7W$var$config_1.Config.PackageJSON.name}`),console.log(`Version:       ${$l7W$var$config_1.Config.PackageJSON.version}`),console.log(`Config:        ${$l7W$var$config_1.Config.ConfigPath}\\n`),yield $l7W$import$_resolve($l7W$var$config_1.Config.checkRequirements());const r=process.hrtime();require(\"ts-node\").register({project:$l7W$var$path_1.join(__dirname,\"../../tsconfig.json\"),compilerOptions:{types:[\"node\"]}}),e.prettylog&&(process.env.PRETTYLOG=\"true\"),\"\"!==$l7W$var$config_1.Config.SourceRoutePath&&(yield $l7W$import$_resolve($l7W$var$tsoaRunner_1.routeBuild($l7W$var$config_1.Config.ConfigData.sourceEntrypoint))),console.log($l7W$var$chalk_1.default.bold(\"Appserver Warmup\"));const o=$l7W$var$config_1.Config.Spinner;let t;yield $l7W$import$_resolve(o.start(\"Registering routes\"));try{require(\"\"!==$l7W$var$config_1.Config.ConfigData.sourceEntrypoint?$l7W$var$config_1.Config.ConfigData.sourceEntrypoint:$l7W$var$config_1.Config.ConfigData.entrypoint),t=JSON.parse(process.env[$l7W$var$main_1.VALORYMETAVAR])}catch(e){yield $l7W$import$_resolve($l7W$var$helpers_1.spinnerFail(\"failed to load apperver\",e))}o.succeed();const i=t.valory.swagger;i.schemes=e.schemes,i.host=e.host,i.info.version=e.apiVersion;const a=$l7W$var$lodash_1.omitBy(i,$l7W$var$lodash_1.isNil),n=$l7W$var$compilerheaders_1.CompilationLevel[e.compilationLevel];$l7W$var$compileRunner_1.compileAndSave(a,$l7W$var$config_1.Config.CompSwagPath,process.cwd(),t.valory.undocumentedEndpoints,{debug:e.debugMode,compilationLevel:n,singleError:e.singleError,discrimFastFail:e.discrimFastFail},e.debugArtifactPath).then(()=>{console.log(\"\\nDone\",($l7W$var$helpers_1.convertTime(process.hrtime(r))/1e3).toFixed(3)+\"s\"),$l7W$var$thread_spin_1.ThreadSpinner.shutdown(),process.exit(0)})});return function(r){return e.apply(this,arguments)}})(),$l7W$var$configBuilder=(()=>{var e=$l7W$import$_coroutine(function*(e){const r=yield $l7W$import$_resolve($l7W$var$inquirer.prompt([{name:\"entrypoint\",message:`Path to entrypoint file. Relative to ${$l7W$var$config_1.Config.RootPath}`,type:\"input\",validate:e=>{const r=$l7W$var$path_1.resolve($l7W$var$path_1.join($l7W$var$config_1.Config.RootPath,e));return $l7W$var$fs_1.existsSync(r)?\".js\"===$l7W$var$path_1.extname(r)||\"Entrypoint must be a plain javascript file\":\"Entrypoint file does not exist\"}},{name:\"isTS\",message:\"Is this a typescript project?\",type:\"confirm\"},{name:\"sourceEntrypoint\",message:`Path to ts source file for the entrypoint. Relative to ${$l7W$var$config_1.Config.RootPath}`,type:\"input\",when:e=>e.isTS,validate:e=>{const r=$l7W$var$path_1.resolve($l7W$var$path_1.join($l7W$var$config_1.Config.RootPath,e));return $l7W$var$fs_1.existsSync(r)?\".ts\"===$l7W$var$path_1.extname(r)||\"Entrypoint must be a typescript file\":\"Entrypoint file does not exist\"}},{name:\"singleError\",message:\"Enable single error mode\",type:\"confirm\",default:!1}]));$l7W$var$fs_1.writeFileSync($l7W$var$config_1.Config.ConfigPath,JSON.stringify(r,null,2))});return function(r){return e.apply(this,arguments)}})();var $l7W$var$__importStar=$l7W$exports&&$l7W$exports.__importStar||function(e){if(e&&e.__esModule)return e;var r={};if(null!=e)for(var o in e)Object.hasOwnProperty.call(e,o)&&(r[o]=e[o]);return r.default=e,r},$l7W$var$__importDefault=$l7W$exports&&$l7W$exports.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty($l7W$exports,\"__esModule\",{value:!0});const $l7W$var$config_1=$parcel$require(\"+l7W\",\"./config\");process.env[$l7W$var$config_1.CLI_MODE_FLAG]=\"true\";const $l7W$var$main_1=$parcel$require(\"+l7W\",\"../main\"),$l7W$var$compilerheaders_1=$parcel$require(\"+l7W\",\"../compiler/compilerheaders\"),$l7W$var$compileRunner_1=$parcel$require(\"+l7W\",\"../compiler/compileRunner\"),$l7W$var$lodash_1=require(\"lodash\"),$l7W$var$path_1=require(\"path\"),$l7W$var$tsoaRunner_1=$parcel$require(\"+l7W\",\"../tsoa/tsoaRunner\"),$l7W$var$yargs=require(\"yargs\"),$l7W$var$inquirer=$l7W$var$__importStar(require(\"inquirer\")),$l7W$var$fs_1=require(\"fs\"),$l7W$var$thread_spin_1=require(\"thread-spin\"),$l7W$var$helpers_1=$parcel$require(\"+l7W\",\"./helpers\"),$l7W$var$chalk_1=$l7W$var$__importDefault(require(\"chalk\"));function $l7W$var$cliRunner(e){process.env.TEST_MODE=\"TRUE\",process.env.PORT=e.port,e.prettylog&&(process.env.PRETTYLOG=\"true\"),process.env[$l7W$var$main_1.VALORYLOGGERVAR]=e.loglevel,require($l7W$var$config_1.Config.ConfigData.entrypoint)}$l7W$var$yargs.option(\"project\",{desc:\"Top level of your project containing valory.json\",type:\"string\",default:process.cwd(),alias:\"p\"}).command(\"init\",\"Initialize valory config\",e=>(e.config(\"project\",e=>($l7W$var$config_1.Config.load(!1,e),$l7W$var$config_1.Config.ConfigData)),e),$l7W$var$configBuilder).command(\"compile\",\"Compile valory project\",e=>(e.options({entrypoint:{description:\"Main entrypoint for the api\"},host:{description:\"The host for your api e.g. somewebsite.com\",type:\"string\"},scheme:{alias:\"s\",description:\"The access method for your api\",choices:[\"http\",\"https\"],default:\"https\",type:\"string\"},basePath:{alias:\"r\",description:\"Api path relative to the host. It must start with a slash.\",coerce:e=>{if(e.startsWith(\"/\"))return e;throw Error(\"Resource path MUST start with a '/'\")},default:\"/\",type:\"string\"},outputFile:{alias:\"o\",desc:\"File to write swagger output to.\",default:$l7W$var$path_1.join(process.cwd(),\"swagger.json\"),type:\"string\"},apiVersion:{desc:\"Api version string\",default:\"1.0.0\",type:\"string\"},singleError:{desc:\"Only return a single validation error at a time\",boolean:!0,default:!1},discrimFastFail:{desc:\"Enables discriminator fast fail EXPERIMENTAL\",boolean:!0,default:!1},compilationLevel:{alias:\"l\",desc:\"Compilation level to pass to closure compiler\",choices:[\"SIMPLE\",\"ADVANCED\",\"WHITESPACE_ONLY\"],default:\"ADVANCED\"},debugMode:{alias:\"d\",desc:\"Enable debug mode for the compiler.\",boolean:!0,default:!1},debugArtifactPath:{alias:\"a\",desc:\"When specified, intermediate compilation artifacts will be placed in a folder create here\",type:\"string\"},prettylog:{desc:\"Prettyify log output\",boolean:!0,default:!1}}).config(\"project\",e=>(process.env.VALORYCOMPILER=\"TRUE\",$l7W$var$config_1.Config.load(!0,e),$l7W$var$config_1.Config.ConfigData)),e),e=>{$l7W$var$compilerRunner(e).then().catch(e=>{console.error(e)})}).command(\"test\",\"Start a test server\",e=>(e.options({entrypoint:{description:\"Main entrypoint for the api\"},port:{desc:\"Port to run the appserver on\",default:8080,type:\"number\"},prettylog:{desc:\"Prettyify log output\",boolean:!0,default:!1},loglevel:{alias:\"l\",desc:\"logging level\",type:\"string\",default:\"info\"}}).config(\"project\",e=>($l7W$var$config_1.Config.load(!0,e),$l7W$var$config_1.Config.ConfigData)),e),$l7W$var$cliRunner).demandCommand().parse();"},"hash":"1e24264f5f4343d3ff90df25f42c3d58","cacheData":{"env":{},"imports":{"$l7W$import$_coroutine":["bluebird","coroutine"],"$l7W$import$_resolve":["bluebird","resolve"]},"exports":{},"wildcards":[],"isCommonJS":true,"shouldWrap":false}}