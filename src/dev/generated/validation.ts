
////////////////////////////////////////////////////////
// ___   ___    _  _  ___ _____   ___ ___ ___ _____   //
// |   \ / _ \  | \| |/ _ \_   _| | __|   \_ _|_   _| //
// | |) | (_) | | .` | (_) || |   | _|| |) | |  | |   //
// |___/ \___/  |_|\_|\___/ |_|   |___|___/___| |_|   //
//                                                    //
// This file was generated by valory and should not   //
// be directly edited.                                //
////////////////////////////////////////////////////////


    // @ts-nocheck
    /* tslint:disable */
    'use strict';module.exports={validators:{"/test":{GET:{200:function(){function e(b,d){var a=null,c=0;if(b&&"object"===typeof b&&!Array.isArray(b)){for(var f in b);void 0===b.body?(b={keyword:"required",dataPath:(d||"")+"",schemaPath:"#/required",params:{missingProperty:"body"},message:"should have required property 'body'"},null===a?a=[b]:a.push(b),c++):null!==b.body&&(b={keyword:"type",dataPath:(d||"")+".body",schemaPath:"#/properties/body/type",params:{type:"null"},message:"should be null"},null===
a?a=[b]:a.push(b),c++)}e.errors=a;return 0===c}e.a={required:["body"],properties:{body:{type:"null",$schema:"http://json-schema.org/draft-04/schema#"}}};return e}(),"-1":function(){function e(d,a){var c=null,f=0;if(d&&"object"===typeof d&&!Array.isArray(d)){for(var g in d);d=d.body;void 0===d?(a={keyword:"required",dataPath:(a||"")+"",schemaPath:"#/required",params:{missingProperty:"body"},message:"should have required property 'body'"},null===c?c=[a]:c.push(a),f++):"string"===typeof d?b.test(d)||
(a={keyword:"pattern",dataPath:(a||"")+".body",schemaPath:"#/properties/body/pattern",params:{pattern:"^a.+$"},message:'should match pattern "^a.+$"'},null===c?c=[a]:c.push(a),f++):(a={keyword:"type",dataPath:(a||"")+".body",schemaPath:"#/properties/body/type",params:{type:"string"},message:"should be string"},null===c?c=[a]:c.push(a),f++)}e.errors=c;return 0===f}const b=/^a.+$/;e.a={required:["body"],properties:{body:{type:"string",pattern:"^a.+$",$schema:"http://json-schema.org/draft-04/schema#"}}};
return e}()}}},spec:{info:{title:"Test Api",version:"1"},paths:{"/test":{get:{requestBody:{required:!0,content:{"application/json":{schema:{type:"string",pattern:"^a.+$"}}}},responses:{200:{description:"A response"}}}}},openapi:"3.0.2"},compswagVersion:2,specHash:"faf13a070c7a306805ef540630b81b6571c648f6"};

    