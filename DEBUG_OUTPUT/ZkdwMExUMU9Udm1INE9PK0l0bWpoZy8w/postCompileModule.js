'use strict';/** @const */ var l=require("xxhashjs").h32;
function m(d,e){if(d===e)return!0;var f=Array.isArray(d),a=Array.isArray(e);if(f&&a){if(d.length!=e.length)return!1;for(a=0;a<d.length;a++)if(!m(d[a],e[a]))return!1;return!0}if(f!=a)return!1;if(d&&e&&"object"===typeof d&&"object"===typeof e){f=Object.keys(d);if(f.length!==Object.keys(e).length)return!1;a=d instanceof Date;var c=e instanceof Date;if(a&&c)return d.getTime()==e.getTime();if(a!=c)return!1;a=d instanceof RegExp;c=e instanceof RegExp;if(a&&c)return d.toString()==e.toString();if(a!=c)return!1;
for(a=0;a<f.length;a++)if(!Object.prototype.hasOwnProperty.call(e,f[a]))return!1;for(a=0;a<f.length;a++)if(!m(d[f[a]],e[f[a]]))return!1;return!0}return!1}
module.exports={f1901113617:function(d){"use strict";var e=null,f=0;if(d&&"object"===typeof d&&!Array.isArray(d)){var a=d.body;if(void 0===a)return"ValidationError[required]: request.body is a required property";if(a&&"object"===typeof a&&!Array.isArray(a)){var c=a.merchant_ref;if(void 0===c)d=!0;else{if("string"!==typeof c){d=typeof c;var h=void 0;"number"==d||"boolean"==d?h=""+c:null===c&&(h="");if(void 0===h)return"ValidationError[type]: request.body.merchant_ref should be string";a.merchant_ref=
h}d=f===f}if(d){c=a.transaction_type;if(void 0===c)d=!0;else{if("string"!==typeof c){d=typeof c;h=void 0;"number"==d||"boolean"==d?h=""+c:null===c&&(h="");if(void 0===h)return"ValidationError[type]: request.body.transaction_type should be string";a.transaction_type=h}d=f===f}if(d){c=a.method;if(void 0===c)return"ValidationError[required]: request.body.method is a required property";if("string"!==typeof c){d=typeof c;h=void 0;"number"==d||"boolean"==d?h=""+c:null===c&&(h="");if(void 0===h)return"ValidationError[type]: request.body.method should be string";
a.method=h}if(f===f){c=a.amount;if(void 0===c)return"ValidationError[required]: request.body.amount is a required property";if("string"!==typeof c){d=typeof c;h=void 0;"number"==d||"boolean"==d?h=""+c:null===c&&(h="");if(void 0===h)return"ValidationError[type]: request.body.amount should be string";a.amount=h}}}}}else return"ValidationError[type]: request.body should be object";if(f===f){h=f;d=!1;var n=f;if(a&&"object"===typeof a&&!Array.isArray(a)){if(void 0===a.method)c=!0;else{var b=f;(c=m(a.method,
"CreditCard"))||f++;c=f===b}if(c)if(c=a.credit_card,void 0===c)b="ValidationError[required]: request.body.credit_card is a required property",null===e?e=[b]:e.push(b),f++;else if(c&&"object"===typeof c&&!Array.isArray(c)){b=c.type;if(void 0===b)a=!0;else{a=f;if("string"!==typeof b){var k=typeof b,g=void 0;"number"==k||"boolean"==k?g=""+b:null===b&&(g="");void 0===g?(b="ValidationError[type]: request.body.credit_card.type should be string",null===e?e=[b]:e.push(b),f++):c.type=g}a=f===a}a&&(b=c.cardholder_name,
void 0===b?a=!0:(a=f,"string"!==typeof b&&(k=typeof b,g=void 0,"number"==k||"boolean"==k?g=""+b:null===b&&(g=""),void 0===g?(b="ValidationError[type]: request.body.credit_card.cardholder_name should be string",null===e?e=[b]:e.push(b),f++):c.cardholder_name=g),a=f===a),a&&(b=c.card_number,void 0===b?a=!0:(a=f,"string"!==typeof b&&(k=typeof b,g=void 0,"number"==k||"boolean"==k?g=""+b:null===b&&(g=""),void 0===g?(b="ValidationError[type]: request.body.credit_card.card_number should be string",null===
e?e=[b]:e.push(b),f++):c.card_number=g),a=f===a),a&&(b=c.exp_date,void 0===b?a=!0:(a=f,"string"!==typeof b&&(k=typeof b,g=void 0,"number"==k||"boolean"==k?g=""+b:null===b&&(g=""),void 0===g?(b="ValidationError[type]: request.body.credit_card.exp_date should be string",null===e?e=[b]:e.push(b),f++):c.exp_date=g),a=f===a),a&&(b=c.cvv,void 0!==b&&"string"!==typeof b&&(k=typeof b,g=void 0,"number"==k||"boolean"==k?g=""+b:null===b&&(g=""),void 0===g?(b="ValidationError[type]: request.body.credit_card.cvv should be string",
null===e?e=[b]:e.push(b),f++):c.cvv=g)))))}else b="ValidationError[type]: request.body.credit_card should be object",null===e?e=[b]:e.push(b),f++}else b="ValidationError[type]: request.body should be object",null===e?e=[b]:e.push(b),f++;f===n&&(d=!0);if(d)f=h,null!==e&&h&&(e.length=h);else return"ValidationError[oneOf]: request.body should match exactly one schema in oneOf"}}else return"ValidationError[type]: request#/type should be object";return 0===f},defHash:"3804672971",globalConsume:[],swaggerBlob:'{"swagger":"2.0","info":{"title":"CNP POC API","version":"1.0.0"},"paths":{"/v1/transactions":{"post":{"summary":"/v1/transactions ","description":"Use this method to submit payments credit and debit cards. Supported transaction type is purchase","tags":["Credit Card Payments"],"parameters":[{"name":"body","in":"body","schema":{"$ref":"#/definitions/Payment"},"required":true}],"responses":{"200":{"description":"The response","schema":{"type":"object","properties":{"status_code":{"$ref":"#/definitions/status_code"},"response_data":{"type":"object","description":"test"}}}}}}}},"definitions":{"status_code":{"description":"Status code for the call. Successful call will return 1","type":"integer"},"merchant_ref":{"description":"Merchant reference code \u2013 used by Payeezy system will be reflected in your settlement records and webhook notifications. \\nIt is an \\"optional\\" field","type":"string"},"transaction_type":{"description":"Type of transaction that merchant would want to process","type":"string"},"method":{"description":"Inputted transaction method","type":"string"},"amount":{"description":"amount","type":"string"},"partial_redemption":{"description":"Default set to false. When set to true, the transaction is enabled to complete using more than one credit card. A partially-authorized transaction will generate a Split Tender ID. Subsequent transactions to complete the authorization should include the Split Tender ID so that all the transactions comprising that authorization can be linked using the Split-Tender tab.","type":"string"},"currency_code":{"description":"Currency Code","type":"string"},"credit_card":{"description":"credit card object","type":"object","properties":{"type":{"description":"Type of CC","type":"string"},"cardholder_name":{"description":"Name of the CC holder","type":"string"},"card_number":{"description":"CC Number","type":"string"},"exp_date":{"description":"Expiration date","type":"string"},"cvv":{"description":"CVV","type":"string"}}},"CreditCard":{"description":"Credit Card Payment","allOf":[{"$ref":"#/definitions/Payment"},{"type":"object","properties":{"credit_card":{"$ref":"#/definitions/credit_card"}},"required":["credit_card"]}]},"Payment":{"discriminator":"method","description":"Payload for purchase","type":"object","properties":{"merchant_ref":{"$ref":"#/definitions/merchant_ref"},"transaction_type":{"$ref":"#/definitions/transaction_type"},"method":{"description":"Type of a payment method","type":"string"},"amount":{"$ref":"#/definitions/amount"}},"required":["method","amount"]}},"tags":[{"name":"Errors","description":"|Status Code|Name|Description|\\n|-|-|--|\\n|1001|ValidationError|Invalid Parameters|\\n|1002|TokenMalformed|Authorization Failure|\\n|1003|InternalError|An internal error occured|\\n|1004|AccessDenied|Access to this resource is denied|\\n"}],"consumes":[],"produces":[]}',
getValidator:function(d,e){d="f"+l(d+":"+e,3141997).toString();return module.exports[d]}};
