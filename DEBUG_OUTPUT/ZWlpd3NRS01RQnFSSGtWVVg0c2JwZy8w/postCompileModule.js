'use strict';/** @const */ var k=require("xxhashjs").h32;
function l(d,a){if(d===a)return!0;var e=Array.isArray(d),c=Array.isArray(a);if(e&&c){if(d.length!=a.length)return!1;for(c=0;c<d.length;c++)if(!l(d[c],a[c]))return!1;return!0}if(e!=c)return!1;if(d&&a&&"object"===typeof d&&"object"===typeof a){e=Object.keys(d);if(e.length!==Object.keys(a).length)return!1;c=d instanceof Date;var b=a instanceof Date;if(c&&b)return d.getTime()==a.getTime();if(c!=b)return!1;c=d instanceof RegExp;b=a instanceof RegExp;if(c&&b)return d.toString()==a.toString();if(c!=b)return!1;
for(c=0;c<e.length;c++)if(!Object.prototype.hasOwnProperty.call(a,e[c]))return!1;for(c=0;c<e.length;c++)if(!l(d[e[c]],a[e[c]]))return!1;return!0}return!1}
module.exports={f1901113617:function(d){"use strict";var a=null,e=0;if(d&&"object"===typeof d&&!Array.isArray(d)){var c=d.body;if(void 0===c){var b="ValidationError[required]: request.body is a required property";null===a?a=[b]:a.push(b)}else{if(c&&"object"===typeof c&&!Array.isArray(c)){d=c.merchant_ref;if(void 0!==d&&"string"!==typeof d){var h=typeof d;var g=void 0;"number"==h||"boolean"==h?g=""+d:null===d&&(g="");void 0===g?(b="ValidationError[type]: request.body.merchant_ref should be string",
null===a?a=[b]:a.push(b),e++):c.merchant_ref=g}d=c.transaction_type;void 0!==d&&"string"!==typeof d&&(h=typeof d,g=void 0,"number"==h||"boolean"==h?g=""+d:null===d&&(g=""),void 0===g?(b="ValidationError[type]: request.body.transaction_type should be string",null===a?a=[b]:a.push(b),e++):c.transaction_type=g);d=c.method;void 0===d?(b="ValidationError[required]: request.body.method is a required property",null===a?a=[b]:a.push(b),e++):"string"!==typeof d&&(h=typeof d,g=void 0,"number"==h||"boolean"==
h?g=""+d:null===d&&(g=""),void 0===g?(b="ValidationError[type]: request.body.method should be string",null===a?a=[b]:a.push(b),e++):c.method=g);d=c.amount;void 0===d?(b="ValidationError[required]: request.body.amount is a required property",null===a?a=[b]:a.push(b),e++):"string"!==typeof d&&(h=typeof d,g=void 0,"number"==h||"boolean"==h?g=""+d:null===d&&(g=""),void 0===g?(b="ValidationError[type]: request.body.amount should be string",null===a?a=[b]:a.push(b),e++):c.amount=g)}else b="ValidationError[type]: request.body should be object",
null===a?a=[b]:a.push(b),e++;g=e;h=!1;var m=e;if(c&&"object"===typeof c&&!Array.isArray(c))if(void 0!==c.method&&((d=l(c.method,"CreditCard"))||e++),d=c.credit_card,void 0===d)b="ValidationError[required]: request.body.credit_card is a required property",null===a?a=[b]:a.push(b),e++;else if(d&&"object"===typeof d&&!Array.isArray(d)){c=d.type;if(void 0!==c&&"string"!==typeof c){b=typeof c;var f=void 0;"number"==b||"boolean"==b?f=""+c:null===c&&(f="");void 0===f?(b="ValidationError[type]: request.body.credit_card.type should be string",
null===a?a=[b]:a.push(b),e++):d.type=f}c=d.cardholder_name;void 0!==c&&"string"!==typeof c&&(b=typeof c,f=void 0,"number"==b||"boolean"==b?f=""+c:null===c&&(f=""),void 0===f?(b="ValidationError[type]: request.body.credit_card.cardholder_name should be string",null===a?a=[b]:a.push(b),e++):d.cardholder_name=f);c=d.card_number;void 0!==c&&"string"!==typeof c&&(b=typeof c,f=void 0,"number"==b||"boolean"==b?f=""+c:null===c&&(f=""),void 0===f?(b="ValidationError[type]: request.body.credit_card.card_number should be string",
null===a?a=[b]:a.push(b),e++):d.card_number=f);c=d.exp_date;void 0!==c&&"string"!==typeof c&&(b=typeof c,f=void 0,"number"==b||"boolean"==b?f=""+c:null===c&&(f=""),void 0===f?(b="ValidationError[type]: request.body.credit_card.exp_date should be string",null===a?a=[b]:a.push(b),e++):d.exp_date=f);c=d.cvv;void 0!==c&&"string"!==typeof c&&(b=typeof c,f=void 0,"number"==b||"boolean"==b?f=""+c:null===c&&(f=""),void 0===f?(b="ValidationError[type]: request.body.credit_card.cvv should be string",null===
a?a=[b]:a.push(b),e++):d.cvv=f)}else b="ValidationError[type]: request.body.credit_card should be object",null===a?a=[b]:a.push(b),e++;else b="ValidationError[type]: request.body should be object",null===a?a=[b]:a.push(b),e++;e===m&&(h=!0);h?null!==a&&(g?a.length=g:a=null):(b="ValidationError[oneOf]: request.body should match exactly one schema in oneOf",null===a?a=[b]:a.push(b))}}else b="ValidationError[type]: request#/type should be object",null===a?a=[b]:a.push(b);return null==a||0===a.length?
!0:a},defHash:"3804672971",globalConsume:[],swaggerBlob:'{"swagger":"2.0","info":{"title":"CNP POC API","version":"1.0.0"},"paths":{"/v1/transactions":{"post":{"summary":"/v1/transactions ","description":"Use this method to submit payments credit and debit cards. Supported transaction type is purchase","tags":["Credit Card Payments"],"parameters":[{"name":"body","in":"body","schema":{"$ref":"#/definitions/Payment"},"required":true}],"responses":{"200":{"description":"The response","schema":{"type":"object","properties":{"status_code":{"$ref":"#/definitions/status_code"},"response_data":{"type":"object","description":"test"}}}}}}}},"definitions":{"status_code":{"description":"Status code for the call. Successful call will return 1","type":"integer"},"merchant_ref":{"description":"Merchant reference code \u2013 used by Payeezy system will be reflected in your settlement records and webhook notifications. \\nIt is an \\"optional\\" field","type":"string"},"transaction_type":{"description":"Type of transaction that merchant would want to process","type":"string"},"method":{"description":"Inputted transaction method","type":"string"},"amount":{"description":"amount","type":"string"},"partial_redemption":{"description":"Default set to false. When set to true, the transaction is enabled to complete using more than one credit card. A partially-authorized transaction will generate a Split Tender ID. Subsequent transactions to complete the authorization should include the Split Tender ID so that all the transactions comprising that authorization can be linked using the Split-Tender tab.","type":"string"},"currency_code":{"description":"Currency Code","type":"string"},"credit_card":{"description":"credit card object","type":"object","properties":{"type":{"description":"Type of CC","type":"string"},"cardholder_name":{"description":"Name of the CC holder","type":"string"},"card_number":{"description":"CC Number","type":"string"},"exp_date":{"description":"Expiration date","type":"string"},"cvv":{"description":"CVV","type":"string"}}},"CreditCard":{"description":"Credit Card Payment","allOf":[{"$ref":"#/definitions/Payment"},{"type":"object","properties":{"credit_card":{"$ref":"#/definitions/credit_card"}},"required":["credit_card"]}]},"Payment":{"discriminator":"method","description":"Payload for purchase","type":"object","properties":{"merchant_ref":{"$ref":"#/definitions/merchant_ref"},"transaction_type":{"$ref":"#/definitions/transaction_type"},"method":{"description":"Type of a payment method","type":"string"},"amount":{"$ref":"#/definitions/amount"}},"required":["method","amount"]}},"tags":[{"name":"Errors","description":"|Status Code|Name|Description|\\n|-|-|--|\\n|1001|ValidationError|Invalid Parameters|\\n|1002|TokenMalformed|Authorization Failure|\\n|1003|InternalError|An internal error occured|\\n|1004|AccessDenied|Access to this resource is denied|\\n"}],"consumes":[],"produces":[]}',
getValidator:function(d,a){d="f"+k(d+":"+a,3141997).toString();return module.exports[d]}};
