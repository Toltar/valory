/*tslint:disable*/

{{
function paramPath(type, name) {
    switch (type) {
        case "header":
            return `req.headers.${name}`;
        case "request":
            return "(req as any)";
        case "body":
            return "req.body";
        default:
            return `req.${type}.${name}`;
    }
}
}}
import {Valory, Swagger, ApiRequest} from "{{= process.env.NODE_ENV == "test" ? "../main" : "valory"}}";
{{~ it.metadata.controllers : item}}
  import {{{= item.name}}} from "{{=item.location}}";{{~}}
{{~ it.metadata.controllers : item}}
  const {{=item.name}}Controller = new {{=item.name}}();{{~}}
export = {
    register: (app: Valory) => {
                  {{~ it.metadata.controllers: route}}{{~ route.methods: method}}
                  {{const path = `/${route.path}${method.path}`.replace("//","/");}}
                  app.{{=method.method}}("{{=path}}",{{=JSON.stringify(it.swagger.paths[path][method.method], null, 2)}},(req: ApiRequest, logger: any)=>{
                      return app.buildSuccess({{=route.name}}Controller.{{=method.name}}(
                          {{~ method.parameters: param}}{{= paramPath(param.in, param.name) }},{{~}}
                      ));
                  },undefined,{{=method.isHidden}})
                  {{~}}{{~}}
              },
    definitions: {{=JSON.stringify(it.swagger.definitions, null, 2)}},
}